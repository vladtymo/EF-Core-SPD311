// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Spanish_Tournament.Persistance;

#nullable disable

namespace Spanish_Tournament.Migrations
{
    [DbContext(typeof(TournamentDbContext))]
    [Migration("20250208155100_SeedData")]
    partial class SeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Spanish_Tournament.Entities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 1,
                            Name = "Berlin"
                        },
                        new
                        {
                            Id = 2,
                            CountryId = 1,
                            Name = "Munich"
                        },
                        new
                        {
                            Id = 3,
                            CountryId = 2,
                            Name = "Paris"
                        },
                        new
                        {
                            Id = 4,
                            CountryId = 2,
                            Name = "Lyon"
                        },
                        new
                        {
                            Id = 5,
                            CountryId = 3,
                            Name = "Madrid"
                        },
                        new
                        {
                            Id = 6,
                            CountryId = 3,
                            Name = "Barcelona"
                        },
                        new
                        {
                            Id = 7,
                            CountryId = 4,
                            Name = "Rome"
                        },
                        new
                        {
                            Id = 8,
                            CountryId = 4,
                            Name = "Milan"
                        },
                        new
                        {
                            Id = 9,
                            CountryId = 5,
                            Name = "London"
                        },
                        new
                        {
                            Id = 10,
                            CountryId = 5,
                            Name = "Manchester"
                        });
                });

            modelBuilder.Entity("Spanish_Tournament.Entities.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Germany"
                        },
                        new
                        {
                            Id = 2,
                            Name = "France"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Spain"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Italy"
                        },
                        new
                        {
                            Id = 5,
                            Name = "England"
                        });
                });

            modelBuilder.Entity("Spanish_Tournament.Entities.Goal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MatchId")
                        .HasColumnType("int");

                    b.Property<int>("Minute")
                        .HasColumnType("int");

                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MatchId");

                    b.HasIndex("PlayerId");

                    b.HasIndex("TeamId");

                    b.ToTable("Goals");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MatchId = 1,
                            Minute = 34,
                            PlayerId = 2,
                            TeamId = 1
                        },
                        new
                        {
                            Id = 2,
                            MatchId = 1,
                            Minute = 58,
                            PlayerId = 2,
                            TeamId = 1
                        },
                        new
                        {
                            Id = 3,
                            MatchId = 1,
                            Minute = 78,
                            PlayerId = 7,
                            TeamId = 2
                        },
                        new
                        {
                            Id = 4,
                            MatchId = 2,
                            Minute = 21,
                            PlayerId = 3,
                            TeamId = 3
                        },
                        new
                        {
                            Id = 5,
                            MatchId = 2,
                            Minute = 59,
                            PlayerId = 4,
                            TeamId = 3
                        },
                        new
                        {
                            Id = 6,
                            MatchId = 3,
                            Minute = 43,
                            PlayerId = 5,
                            TeamId = 6
                        },
                        new
                        {
                            Id = 7,
                            MatchId = 3,
                            Minute = 68,
                            PlayerId = 6,
                            TeamId = 5
                        },
                        new
                        {
                            Id = 8,
                            MatchId = 3,
                            Minute = 89,
                            PlayerId = 5,
                            TeamId = 6
                        },
                        new
                        {
                            Id = 9,
                            MatchId = 4,
                            Minute = 16,
                            PlayerId = 7,
                            TeamId = 7
                        },
                        new
                        {
                            Id = 10,
                            MatchId = 4,
                            Minute = 47,
                            PlayerId = 8,
                            TeamId = 8
                        },
                        new
                        {
                            Id = 11,
                            MatchId = 5,
                            Minute = 23,
                            PlayerId = 2,
                            TeamId = 2
                        },
                        new
                        {
                            Id = 12,
                            MatchId = 5,
                            Minute = 77,
                            PlayerId = 3,
                            TeamId = 3
                        },
                        new
                        {
                            Id = 13,
                            MatchId = 6,
                            Minute = 38,
                            PlayerId = 5,
                            TeamId = 6
                        },
                        new
                        {
                            Id = 14,
                            MatchId = 6,
                            Minute = 60,
                            PlayerId = 7,
                            TeamId = 7
                        },
                        new
                        {
                            Id = 15,
                            MatchId = 7,
                            Minute = 32,
                            PlayerId = 8,
                            TeamId = 8
                        },
                        new
                        {
                            Id = 16,
                            MatchId = 7,
                            Minute = 50,
                            PlayerId = 2,
                            TeamId = 1
                        },
                        new
                        {
                            Id = 17,
                            MatchId = 8,
                            Minute = 28,
                            PlayerId = 4,
                            TeamId = 3
                        },
                        new
                        {
                            Id = 18,
                            MatchId = 8,
                            Minute = 65,
                            PlayerId = 10,
                            TeamId = 10
                        },
                        new
                        {
                            Id = 19,
                            MatchId = 9,
                            Minute = 14,
                            PlayerId = 7,
                            TeamId = 9
                        },
                        new
                        {
                            Id = 20,
                            MatchId = 9,
                            Minute = 59,
                            PlayerId = 6,
                            TeamId = 5
                        },
                        new
                        {
                            Id = 21,
                            MatchId = 10,
                            Minute = 25,
                            PlayerId = 10,
                            TeamId = 10
                        },
                        new
                        {
                            Id = 22,
                            MatchId = 10,
                            Minute = 72,
                            PlayerId = 2,
                            TeamId = 2
                        });
                });

            modelBuilder.Entity("Spanish_Tournament.Entities.Match", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("GuestTeamId")
                        .HasColumnType("int");

                    b.Property<int>("HomeTeamId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GuestTeamId");

                    b.HasIndex("HomeTeamId");

                    b.ToTable("Matches");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2025, 4, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GuestTeamId = 2,
                            HomeTeamId = 1
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2025, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GuestTeamId = 4,
                            HomeTeamId = 3
                        },
                        new
                        {
                            Id = 3,
                            Date = new DateTime(2025, 4, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GuestTeamId = 6,
                            HomeTeamId = 5
                        },
                        new
                        {
                            Id = 4,
                            Date = new DateTime(2025, 4, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GuestTeamId = 8,
                            HomeTeamId = 7
                        },
                        new
                        {
                            Id = 5,
                            Date = new DateTime(2025, 4, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GuestTeamId = 3,
                            HomeTeamId = 2
                        },
                        new
                        {
                            Id = 6,
                            Date = new DateTime(2025, 4, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GuestTeamId = 7,
                            HomeTeamId = 6
                        },
                        new
                        {
                            Id = 7,
                            Date = new DateTime(2025, 4, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GuestTeamId = 1,
                            HomeTeamId = 8
                        },
                        new
                        {
                            Id = 8,
                            Date = new DateTime(2025, 4, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GuestTeamId = 10,
                            HomeTeamId = 4
                        },
                        new
                        {
                            Id = 9,
                            Date = new DateTime(2025, 4, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GuestTeamId = 5,
                            HomeTeamId = 9
                        },
                        new
                        {
                            Id = 10,
                            Date = new DateTime(2025, 4, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GuestTeamId = 2,
                            HomeTeamId = 10
                        });
                });

            modelBuilder.Entity("Spanish_Tournament.Entities.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Birthdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<int>("PositionId")
                        .HasColumnType("int");

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PositionId");

                    b.HasIndex("TeamId");

                    b.ToTable("Players");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Birthdate = new DateTime(1986, 3, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Manuel",
                            LastName = "Neuer",
                            Number = 1,
                            PositionId = 1,
                            TeamId = 1
                        },
                        new
                        {
                            Id = 2,
                            Birthdate = new DateTime(1988, 8, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Robert",
                            LastName = "Lewandowski",
                            Number = 9,
                            PositionId = 4,
                            TeamId = 1
                        },
                        new
                        {
                            Id = 3,
                            Birthdate = new DateTime(1998, 12, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Kylian",
                            LastName = "Mbappé",
                            Number = 7,
                            PositionId = 4,
                            TeamId = 3
                        },
                        new
                        {
                            Id = 4,
                            Birthdate = new DateTime(1992, 2, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Neymar",
                            LastName = "Jr",
                            Number = 11,
                            PositionId = 4,
                            TeamId = 3
                        },
                        new
                        {
                            Id = 5,
                            Birthdate = new DateTime(1987, 6, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Lionel",
                            LastName = "Messi",
                            Number = 10,
                            PositionId = 4,
                            TeamId = 6
                        },
                        new
                        {
                            Id = 6,
                            Birthdate = new DateTime(1986, 3, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Sergio",
                            LastName = "Ramos",
                            Number = 4,
                            PositionId = 2,
                            TeamId = 5
                        },
                        new
                        {
                            Id = 7,
                            Birthdate = new DateTime(1985, 2, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Cristiano",
                            LastName = "Ronaldo",
                            Number = 7,
                            PositionId = 4,
                            TeamId = 9
                        },
                        new
                        {
                            Id = 8,
                            Birthdate = new DateTime(1993, 7, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Harry",
                            LastName = "Kane",
                            Number = 9,
                            PositionId = 4,
                            TeamId = 9
                        },
                        new
                        {
                            Id = 9,
                            Birthdate = new DateTime(1993, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Paul",
                            LastName = "Pogba",
                            Number = 6,
                            PositionId = 3,
                            TeamId = 9
                        },
                        new
                        {
                            Id = 10,
                            Birthdate = new DateTime(1991, 6, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Kevin",
                            LastName = "De Bruyne",
                            Number = 17,
                            PositionId = 3,
                            TeamId = 10
                        });
                });

            modelBuilder.Entity("Spanish_Tournament.Entities.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Positions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Goalkeeper"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Defender"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Midfielder"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Forward"
                        });
                });

            modelBuilder.Entity("Spanish_Tournament.Entities.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<int>("Draws")
                        .HasColumnType("int");

                    b.Property<int>("Loses")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Wins")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Teams");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityId = 1,
                            Draws = 2,
                            Loses = 3,
                            Name = "Bayern Munich",
                            Wins = 25
                        },
                        new
                        {
                            Id = 2,
                            CityId = 2,
                            Draws = 5,
                            Loses = 5,
                            Name = "Borussia Dortmund",
                            Wins = 20
                        },
                        new
                        {
                            Id = 3,
                            CityId = 3,
                            Draws = 1,
                            Loses = 0,
                            Name = "Paris Saint-Germain",
                            Wins = 30
                        },
                        new
                        {
                            Id = 4,
                            CityId = 4,
                            Draws = 5,
                            Loses = 10,
                            Name = "Olympique Lyonnais",
                            Wins = 15
                        },
                        new
                        {
                            Id = 5,
                            CityId = 5,
                            Draws = 3,
                            Loses = 2,
                            Name = "Real Madrid",
                            Wins = 28
                        },
                        new
                        {
                            Id = 6,
                            CityId = 6,
                            Draws = 4,
                            Loses = 6,
                            Name = "FC Barcelona",
                            Wins = 22
                        },
                        new
                        {
                            Id = 7,
                            CityId = 7,
                            Draws = 3,
                            Loses = 9,
                            Name = "Juventus",
                            Wins = 18
                        },
                        new
                        {
                            Id = 8,
                            CityId = 8,
                            Draws = 3,
                            Loses = 7,
                            Name = "AC Milan",
                            Wins = 20
                        },
                        new
                        {
                            Id = 9,
                            CityId = 9,
                            Draws = 4,
                            Loses = 4,
                            Name = "Manchester United",
                            Wins = 24
                        },
                        new
                        {
                            Id = 10,
                            CityId = 10,
                            Draws = 4,
                            Loses = 3,
                            Name = "Manchester City",
                            Wins = 26
                        });
                });

            modelBuilder.Entity("Spanish_Tournament.Entities.City", b =>
                {
                    b.HasOne("Spanish_Tournament.Entities.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Spanish_Tournament.Entities.Goal", b =>
                {
                    b.HasOne("Spanish_Tournament.Entities.Match", "Match")
                        .WithMany("Goals")
                        .HasForeignKey("MatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Spanish_Tournament.Entities.Player", "Player")
                        .WithMany("Goals")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Spanish_Tournament.Entities.Team", "Team")
                        .WithMany("Goals")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Match");

                    b.Navigation("Player");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("Spanish_Tournament.Entities.Match", b =>
                {
                    b.HasOne("Spanish_Tournament.Entities.Team", "GuestTeam")
                        .WithMany("GuestMatches")
                        .HasForeignKey("GuestTeamId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Spanish_Tournament.Entities.Team", "HomeTeam")
                        .WithMany("HomeMatches")
                        .HasForeignKey("HomeTeamId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("GuestTeam");

                    b.Navigation("HomeTeam");
                });

            modelBuilder.Entity("Spanish_Tournament.Entities.Player", b =>
                {
                    b.HasOne("Spanish_Tournament.Entities.Position", "Position")
                        .WithMany("Players")
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Spanish_Tournament.Entities.Team", "Team")
                        .WithMany("Players")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Position");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("Spanish_Tournament.Entities.Team", b =>
                {
                    b.HasOne("Spanish_Tournament.Entities.City", "City")
                        .WithMany("Teams")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("Spanish_Tournament.Entities.City", b =>
                {
                    b.Navigation("Teams");
                });

            modelBuilder.Entity("Spanish_Tournament.Entities.Country", b =>
                {
                    b.Navigation("Cities");
                });

            modelBuilder.Entity("Spanish_Tournament.Entities.Match", b =>
                {
                    b.Navigation("Goals");
                });

            modelBuilder.Entity("Spanish_Tournament.Entities.Player", b =>
                {
                    b.Navigation("Goals");
                });

            modelBuilder.Entity("Spanish_Tournament.Entities.Position", b =>
                {
                    b.Navigation("Players");
                });

            modelBuilder.Entity("Spanish_Tournament.Entities.Team", b =>
                {
                    b.Navigation("Goals");

                    b.Navigation("GuestMatches");

                    b.Navigation("HomeMatches");

                    b.Navigation("Players");
                });
#pragma warning restore 612, 618
        }
    }
}
